http://www.think-like-a-computer.com/2011/03/04/computer-networking-basics/
http://www.think-like-a-computer.com/2011/08/24/the-routing-table/
https://linuxhint.com/enable-ssh-server-debian/

1. Get the list of the network interfaces of the machine without displaying any detail
for these interfaces. Only the list of names.
ifconfig 	stands for "interface configuration",it's used to view or change the configuration of the networl interfaces on your system".
eth0   	is the first Ethernet interface.NIC(network interface card, aka ethernet card, network adapter)
lo     	loopback interface
wlan0    wireless network
https://www.computerhope.com/unix/uifconfi.htm

ifconfig -l

2. Identify and display the Ethernet interface characteristics

ifconfig en0
en0: flags=8863<UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST> mtu 1500
	options=10b<RXCSUM,TXCSUM,VLAN_HWTAGGING,AV>
	ether 38:c9:86:56:af:a8
	inet6 fe80::181f:87e:a947:31b%en0 prefixlen 64 secured scopeid 0x5
	inet 10.112.7.37 netmask 0xffff0000 broadcast 10.112.255.255
	nd6 options=201<PERFORMNUD,DAD>
	media: autoselect (1000baseT <full-duplex,energy-efficient-ethernet>)
	status: active

solution1:grep inet finds line inet6 and inet, grep broadcast narrows the row to inet, then print the second column
ifconfig en0 | grep inet | grep broadcast | awk '{print $2}'
10.112.7.37
solution2:ipconfig getifaddr en0

3. Identify the MAC address of the Wi-Fi card

solution1: ifconfig en1 | grep ether | awk '{ print $2 }'

solution2: networksetup -listallhardwareports | grep -A3 Wi-Fi | sed -n '3p' | awk '{print $3}'
networksetup -listallhardwareports

-n option suppresses the duplicate rows, 

Hardware Port: Ethernet
Device: en0
Ethernet Address: 38:c9:86:56:af:a8

Hardware Port: Wi-Fi
Device: en1
Ethernet Address: 28:f0:76:4b:f8:78

Hardware Port: Bluetooth PAN
Device: en4
Ethernet Address: 28:f0:76:3f:2c:8d

Hardware Port: Thunderbolt 1
Device: en2
Ethernet Address: 1a:00:01:fa:97:a0

Hardware Port: Thunderbolt 2
Device: en3
Ethernet Address: 1a:00:01:fa:97:a1

Hardware Port: Thunderbolt Bridge
Device: bridge0
Ethernet Address: 1a:00:01:fa:97:a0

VLAN Configurations

4. Identifiy the default gateway in the routing table
netstat -nr | grep default | head -n1 | awk '{ print $2}'

-n – Show numerical addresses instead of hostname
-r – Display the kernel routing tables

netstat - Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships
show network status, head -n1 print first line, awk '{print $2}' print column 2 of that line.

5. Identify the IP address of the DNS that responds to the following url: slash16.org

nslookup slash16.org | awk '/Address/{ print $2}' | tail -n8

6. Get the complete path of the file that contains the IP address of the DNS server
you’re using

/etc directory inside the resolv.conf file.

7. Query an external DNS server on the slash16.org domain name (ie. : google
8.8.8.8)

dig slash16.org @8.8.8.8 | grep slash16.org. | tail -n8 | awk '{print$5}'
dig -> DNS lookup utility  (domain information groper) 
@8.8.8.8 -> external DNS server google uses
dig slash16.org -> would give the same results of ip addresses of slash16.org

dig slash16.org @8.8.8.8 | grep slash16.org. | tail -n8 | awk '{print$5}'

8. Find the provider of slash16.org

Find out IP address and its owner:
$ host -t a google.com

Sample outputs:
google.com has address 209.85.231.104

Now, get ip address information:
$ whois 209.85.231.104

9. Find the external IP of 42.fr
dig +short 42.fr
or
nslookup 42.fr
or
ping 42.fr -c 1
(only returns 1 IP, it pings only once)

System and Network Administration init
10. Identify the network devices between your computer and the slash16.org domain

traceroute slash16.org
 The Internet is an aggregation of network hardware, connected together by gateways.  
e1z2r7p37% traceroute slash16.org
traceroute: Warning: slash16.org has multiple addresses; using 54.230.142.45
traceroute to slash16.org (54.230.142.45), 64 hops max, 52 byte packets
 1  10.112.254.254 (10.112.254.254)  0.888 ms  0.995 ms  1.167 ms
 2  192.168.0.2 (192.168.0.2)  1.067 ms  1.097 ms  1.253 ms
 3  nat (10.90.1.11)  0.226 ms  0.868 ms  0.273 ms
 4  64.62.224.30 (64.62.224.30)  0.940 ms  1.037 ms  1.674 ms
 5  64.62.224.253 (64.62.224.253)  3.512 ms  3.518 ms  3.416 ms
 6  64.62.224.249 (64.62.224.249)  4.740 ms  3.713 ms  6.228 ms
 7  v1851.core2.fmt2.he.net (216.218.200.77)  13.951 ms  3.552 ms  13.201 ms
 8  10ge7-3.core3.fmt2.he.net (184.105.222.141)  4.695 ms  3.325 ms  3.357 ms
 9  100ge14-2.core1.sjc2.he.net (72.52.92.246)  5.583 ms
    10ge7-9.core1.sjc2.he.net (184.105.222.14)  3.776 ms
    100ge14-2.core1.sjc2.he.net (72.52.92.246)  4.545 ms
10  equinix02-sfo5.amazon.com (206.223.116.236)  4.033 ms
    equinix01-sfo5.amazon.com (206.223.116.177)  4.330 ms  3.739 ms
11  52.93.70.194 (52.93.70.194)  4.948 ms
    52.93.70.182 (52.93.70.182)  4.644 ms
    52.93.70.198 (52.93.70.198)  4.711 ms
12  54.240.242.121 (54.240.242.121)  4.275 ms
    54.240.242.39 (54.240.242.39)  4.963 ms
    54.240.242.37 (54.240.242.37)  3.958 ms
13  205.251.230.89 (205.251.230.89)  4.841 ms
    205.251.230.93 (205.251.230.93)  16.978 ms
    205.251.230.95 (205.251.230.95)  4.995 ms
14  * * *
15  * * *
16  * * *
17  server-54-230-142-45.sfo5.r.cloudfront.net (54.230.142.45)  4.619 ms  3.906 ms  3.973 ms

The first line represents your home router (assuming you’re behind a router), 
the next lines represent your ISP, 
and each line further down represents a router that’s further away.

RTT1, RTT2, RTT3: This is the round-trip time that it takes for a packet to get to a hop and back to your computer (in milliseconds). 
1->to router 2->router to another website's router 3->back
 *is package loss

11. Use the output of the previous command to find the name and IP address of the
device that makes the link between you (local network) and the outside world

nat (10.90.1.11) -> network address translator

12. Check that the server with the 10.51.1.253 IP address is reachable from your
computer.

ping 10.51.1.253

13. Figure out the server type.

nslookup 10.51.1.253
Server:		10.51.1.253
Address:	10.51.1.253#53

253.1.51.10.in-addr.arpa	name = dhcp-dns.42.us.org.
253.1.51.10.in-addr.arpa	name = dhcp.42.us.org.

the server type is dhcp (dynamic host configuration protocol), a network protocol that enables a server to automatically assign an IP address to a computer from a defined range of numbers (i.e., a scope) configured for a given network.

14. Use the Reverse DNS to find out the name of the server linked to the 10.51.1.81 IP address

nslookup 10.51.1.81

would give you 
Server:		10.51.1.253
Address:	10.51.1.253#53

81.1.51.10.in-addr.arpa	name = dpm-master.42.us.org.

Address and Routing Parameter Area (ARPA) top-level domain of the Internet
top level domain -> org
middle level domain -> us
..........................

Reverse DNS means lookup through ip address rather than human readable like www.google.com

15. What file contains the local DNS entries?

/etc/hosts

16. Make the intra.42.fr address reroute to 46.19.122.85

echo "46.19.122.85 intra.42.fr" >> /etc/hosts

V.3 System
1. In what file can you find the installed version of your Debian?
2. What command can you use to rename your system?
3. What file has to be modified to make it permanent?
4. What command gives you the time since your system was last booted?
5. Name the command that determines the state of the SSH service.
6. Name the command that reboots the SSH service.
7. Figure out the PID of the SSHD service.
8. What file contains the RSA keys that are authorized to connect via SSH?
7
System and Network Administration init
9. What command lets you know who is connected to the System?
10. Name the command that lists the partition tables of external devices?
11. Name the command that displays the available space left on the system?
12. Figure out the exact size of each folder of /var
13. Name the command that find currently running processes
14. Run the ‘tail -f /var/log/syslog‘ command in background
15. Find the command that kills the background command’s process
16. Find the service which makes it possible to run specific tasks following a regular
schedule
17. Find the command which gives the list of firewall rules
18. With the previous command, authorize only IP addresses from 10.0.0.0/8 to connect
to your system
19. With the previous command, forbid all others
8
System and Network Administration init
V.4 Scripting
1. Write a script which displays only the login, UID and Path of each entry of the
/etc/passwd file.
2. Write a script which updates all the package sources, then all the packages, and then
logs everything in a file named /var/log/update_script.log. Create a scheduled
task for this script, once per week at 4 AM.
3. Write a script which displays the list of files from the folder given as parameter,
sorted by size.
4. Write a script which monitors the modifications made to the /etc/crontab file and
sends an e-mail to root if the file is modified. Create a scheduled task to run this
script everyday at midnight.
man md5sum

first step: install postfix
https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-postfix-as-a-send-only-smtp-server-on-ubuntu-14-04
apt-get install mailutils
apt-get install postfix
modify /etc/aliases
change...
root: username
to...
root: root
and add...
postfix: root

dpkg-reconfigure postfix (debian package)
command:
to check mail -> mail
to send mail with subject "test" to recipient root ->  mail -s "test" root
to write something in the body(Cc:) -> Cc: dfhgdfg

second step: to vi 04
chmod +x 04 
./04
to execute 04

md5 = $(md5sum /etc/crontab)
//create a string for crontab.txt
if [ -e $(pwd)/hash.txt ]
//check does txt exist from currect working directory. the space after and before [] are very important.
then
	if [ "$(grep '$md5' hash.txt)" == "" ]
	//if md5 string is not found, that means strings generated from crontab changed
	then
		echo $md5 > $(pwd)/hash.txt
		//write md5 string to txt
		mail -s "Change to /etc/crontab" root < /etc/crontab
		//deliver mail to with subject " " to recipient
		root < /etc/crontab sends whatever is in crontab as the body to root
	fi 
else 
	echo $md5 > $(pwd)/hash.txt
	// to create hash.txt on the first call, cuz no txt exist previously
	mail -s "Change to /etc/crontab" root < /etc/crontab
	//send crontab content as body to root with subject ""
fi

third step:
testing -> change /etc/crontab file content to see mail

5. Write a script which displays 42.
echo 42



































